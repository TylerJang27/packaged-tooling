on:
  push:
    branches:
      - main

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.failure_is_acceptable }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - macos-14
        php:
          - 8.2
        phar:
          - php-cs-fixer
        failure_is_acceptable: [false]
        include:
          - phar: php-cs-fixer
            source: https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/releases/download/v3.49.0/php-cs-fixer.phar
            extensions: filter,tokenizer,dom,mbstring
    steps:
      - name: Get Envs
        id: env
        shell: bash
        run: |
          ARCH=$(uname -m)
          echo "Arch: $ARCH"
          OUTPUT_BIN=$(echo "${{ matrix.phar }}-${{ runner.os }}-$ARCH" | tr '[:upper:]' '[:lower:]')
          echo "Output binary: $OUTPUT_BIN"
          {
            echo "arch=$ARCH"
            echo "output_bin=$OUTPUT_BIN"
          } >> $GITHUB_OUTPUT

#      - name: Install dependencies
#        shell: bash
#        run: |
#          sudo apt-get -qq update
#          sudo apt-get -yqq install git ca-certificates curl wget build-essential

      - name: Clone crazywhalecc/static-php-cli
        uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          path: static-php-cli

      - id: cache
        uses: actions/cache@v4
        with:
          key: ${{ steps.env.outputs.output_bin }}
          path: |
            static-php-cli/vendor
            static-php-cli/downloads

      - name: Setup Runtime
        shell: bash
        working-directory: static-php-cli
        run: |
          chmod +x bin/setup-runtime
          bin/setup-runtime
          echo "${{ github.workspace }}/static-php-cli/bin" >> $GITHUB_PATH

      - name: Composer install
        shell: bash
        working-directory: static-php-cli
        run: |
          bin/composer install
          chmod +x bin/spc
          bin/spc --version
          echo "${{ github.workspace }}/static-php-cli"
          ls -lh ${{ github.workspace }}/static-php-cli
          echo "${{ github.workspace }}/static-php-cli/bin"
          ls -lh ${{ github.workspace }}/static-php-cli/bin

      - name: Push spc as artifact
        uses: actions/upload-artifact@v2
        with:
          name: spc-${{ runner.os }}-$(uname -m)
          path: ${{ github.workspace }}/static-php-cli/bin/spc

      - name: SPC Doctor
        shell: bash
        working-directory: static-php-cli
        run: |
          #if runner.os is 'Linux', run apt update
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get -qq update
          fi
          
          bin/spc doctor --auto-fix

      - name: SPC Download
        shell: bash
        working-directory: static-php-cli
        run: |
          bin/spc download \
            --for-extensions=phar,${{ matrix.extensions }} \
            --with-php=${{ matrix.php }}

      - name: SPC Build
        shell: bash
        working-directory: static-php-cli
        run: |
          bin/spc build \
            phar,${{ matrix.extensions }} \
            --build-micro \
            --enable-zts

      - name: Download PHAR (${{ matrix.phar_download }})
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/phars;
          curl -L -o ${{ github.workspace }}/phars/${{ matrix.phar }}.phar ${{ matrix.source }}

      - name: Build ${{ matrix.phar }}.phar
        shell: bash
        working-directory: static-php-cli
        run: |
          mkdir -p ${{ github.workspace }}/out || true;
          bin/spc \
            micro:combine \
            ${{ github.workspace }}/phars/${{ matrix.phar }}.phar \
            --output ${{ github.workspace }}/out/${{ steps.env.outputs.output_bin }}

      - name: Push ${{ steps.env.outputs.output_bin }} as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.env.outputs.output_bin }}
          path: |
            ${{ github.workspace }}/out/${{ steps.env.outputs.output_bin }}
